<?php

/*
 * Этот пример демонстрирует как функция использует собственный контекст.
 * Это значит, что функция не будет "видеть" переменные из кода:
 *
 *  - Внутри функции мы можем создавать переменные, которые не повлияют на переменные в глобальной области видимости;
 *  - Не будет конфликта имен, т.к. глобальный контекст и контекст функции это разные контексты.
 */

// ::$acme в глобальном контексте
$acme = 0;

function foo()
{
    // foo::$acme в контексте функции
    $acme = 10;

    echo $acme.PHP_EOL;
}

foo(); // 10

echo $acme.PHP_EOL; // 0
